# YAML doc:  https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema

resources:
- repo: self
# Triggers:  https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema#triggers
trigger: none

# Stages:  https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema#stage
stages:
- stage:  rev_engineer
  displayName:  Reverse Engineer Database
  variables:  []
  jobs:
  - job:  delta_kusto
    pool:
      vmImage: 'windows-latest' # 'windows-latest' or 'ubuntu-latest' or 'macOS-latest'
    variables:  []
    steps:
    # PowerShell script:  https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema#pwsh
    - pwsh:  |
        # Fails if one of the command fails in the script
        $ErrorActionPreference="Stop"
        $clientVersion=(iwr https://delta-kusto.azurefd.net/clientVersion/unique?fromClientVersion=0).Content
        # Display the version on console
        echo "Client Version:  $clientVersion"
        if ($IsLinux) { $os = "linux" }
        elseif ($IsMacOS) { $os = "mac" }
        elseif ($IsWindows) { $os = "windows" }        
        iwr https://github.com/microsoft/delta-kusto/releases/download/$clientVersion/delta-kusto-$os.tar.gz -OutFile delta-kusto-$os.tar.gz
        # On Windows, bsdtar is included starting with Windows 10 / Server 2019 build 17063
        if (!$IsWindows -or [Environment]::OSVersion.Version.Build -ge 17063) {
          tar --extract --file delta-kusto-$os.tar.gz
        } else {
          # For older versions of Windows, download bsdtar since it's not included
          iwr http://libarchive.org/downloads/libarchive-v3.5.2-win64.zip -OutFile libarchive.zip
          Expand-Archive -Path libarchive.zip -DestinationPath .
          ./libarchive/bin/bsdtar --extract --file delta-kusto-$os.tar.gz
        }
        if (!$IsWindows) { chmod +x ./delta-kusto }
      displayName:  Install Delta-Kusto
    - pwsh:  |
        # Fails if one of the command fails in the script
        $ErrorActionPreference="Stop"
        mkdir documentation/tutorials/az-dev-ops/reverse-engineer/kql-scripts
        mkdir documentation/tutorials/az-dev-ops/reverse-engineer/kql-scripts/complete
      displayName:  Prep script folder
    - pwsh:  |
        # Fails if one of the command fails in the script
        $ErrorActionPreference="Stop"
        $clusterUri=${env:CLUSTER_URI}
        echo "Cluster URI:  $clusterUri"
        # Package the login in a JSON payload
        $login="{\""tenantId\"":\""${env:TENANT_ID}\"",\""clientId\"":\""${env:CLIENT_ID}\"",\""secret\"":\""${env:SECRET}\""}"
        ./delta-kusto -p documentation/tutorials/az-dev-ops/reverse-engineer/rev-engineer-parameters.yaml -o jobs.download-dev.target.adx.clusterUri=$clusterUri jobs.delta-dev.target.adx.clusterUri=$clusterUri tokenProvider.login=$login
      displayName:  Run Delta-Kusto
    # Publish artefact:  https://docs.microsoft.com/en-us/azure/devops/pipelines/artifacts/pipeline-artifacts#publish-artifacts
    - publish: documentation/tutorials/az-dev-ops/reverse-engineer/kql-scripts
      artifact:  kql-scripts
      displayName: 'Publish Artifact: kql-scripts'